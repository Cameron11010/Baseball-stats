def normalise_unit_vec(sheet):
    data = []
    for row in sheet.iter_rows(min_row=2, values_only=True):  # Assuming the first row contains headers
        if not all(val is None for val in row):  # Skip over rows with all null values
            data.append(list(row))

    # Specify columns for normalization
    columns_to_normalize = [(7, 12), (14, 19), (21, 26), (28, 33), (35, 40), (42, 47), (49, 54), (56, 61), (63, 68)]

    # Apply unit vector normalization to specified columns
    for start, end in columns_to_normalize:
        # Extract column values
        column_values = [row_data[start - 1:end] for row_data in data]
        column_values = [val for sublist in column_values for val in sublist if
                         val is not None]  # Flatten and remove None values

        if column_values:  # Skip if all values are None
            mag = np.linalg.norm(column_values)  # Calculate the magnitude of the feature vector

            for row_data in data:
                for i in range(start - 1, end):
                    if row_data[i] is not None:  # Skip over null values
                        row_data[i] = row_data[i] / mag

    return data
